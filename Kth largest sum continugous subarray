class Solution{
public:
    int kthLargest(vector<int> &Arr,int N,int K){
        priority_queue<int>p;
    
        for(int i=0;i<N;i++){
            int sum=0;
            for(int j=i;j<N;j++){
                sum+=Arr[j];
                p.push(sum);
            }
        }
        int cnt=1;
        while(!p.empty() && cnt!=K)
        {
            // cout<<p.top()<<" ";
            p.pop();
            cnt++;
        }
        return p.top();
    }
};



//2nd
class Solution {
  public:
    int kthLargest(vector<int> &arr, int k) {
       
       priority_queue< int>pq;
       
       for(int i=0;i<arr.size();i++)
       {
           int sum=0;
           for(int j=i;j<arr.size();j++)
           {
              sum+=arr[j]; 
              pq.push(sum);
           }
       }
       
       while(!pq.empty() && k!=1)
       {
           pq.pop();
           k--;
       }
       return pq.top();
    }
};
