class Solution {
public:
    vector<vector<int>> kClosest(vector<vector<int>>& points, int k) {
        vector<vector<int>>ans;

        priority_queue<pair<double,pair<int,int>>, vector<pair<double,pair<int,int>>>
        ,greater<pair<double,pair<int,int>>>>p;

        for(int i=0;i<points.size();i++){
            int a=points[i][0];
            int b=points[i][1];
            pair<int,int>p1=make_pair(a,b);
            double c=sqrt(pow(a,2)+pow(b,2));
            p.push(make_pair(c,p1));
        }
         
         for(int i=0;i<k;i++){
            pair<double,pair<int,int>>tp=p.top();
            ans.push_back({tp.second.first,tp.second.second});
            p.pop();
         }
         return ans;
    }
};
