class Solution{
    public:
    void heapify(vector<int>& ans,int i,int size){
        int largest=i;
        int left=2*i+1;
        int right=2*i+2;
        if(left<size && ans[largest]<ans[left]){
            largest=left;
        }
        if(right<size && ans[largest]<ans[right]){
            largest=right;
        }
        if(largest!=i){
            swap(ans[largest],ans[i]);
            heapify(ans,largest,size);
        }
    }
    vector<int> mergeHeaps(vector<int> &a, vector<int> &b, int n, int m) {
       vector<int>ans;
       int i=0,j=0;
       while(i<n || j<m){
           if(i<n){
               ans.push_back(a[i]);
               i++;
           }
           if(j<m){
               ans.push_back(b[j]);
               j++;
           }
       }
       int size=ans.size();
       
       for(int i=0;i<size;i++){
           heapify(ans,i,size);
       }
       return ans;
    }
};
