class Solution{
  public:
    //Function to merge K sorted linked list.
    Node * mergeKLists(Node *arr[], int K)
    {
        priority_queue<int,vector<int>,greater<int>>ans;
        for(int i=0;i<K;i++)
        {
            Node* temp=*(arr+i);
            while(temp!=NULL)
            {
                ans.push(temp->data);
                temp=temp->next;
            }
        }
        
        Node* newnode=new Node(-1);
        Node* temp=newnode;
        while(!ans.empty()){
            temp->next=new Node(ans.top());
            ans.pop();
            temp=temp->next;
        }
        return newnode->next;
    }
};


//2
  public:
    // Function to merge K sorted linked list.
    Node* mergeKLists(vector<Node*>& arr) {
        priority_queue<int,vector<int>,greater<int>>p;
        for(int i=0;i<arr.size();i++)
        {
            Node* a=arr[i];
            while(a!=NULL){
                p.push(a->data);
                a=a->next;
            }
        }
        
        Node* newnode=new Node(-1);
        Node* temp=newnode;
        while(!p.empty()){
            temp->next=new Node(p.top());
            p.pop();
            temp=temp->next;
        }
        return newnode->next;
    }
};
